/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package paneles;

import java.awt.BorderLayout;
import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import main.classEjemplares;
import main.methodsSQL;

/**
 *
 * @author cesar
 */
public class pEjemplares extends javax.swing.JPanel {
    private final classEjemplares Ejemplares;
    private String query;
    /**
     * Creates new form pArticulos
     */
    public pEjemplares() {
        initComponents();
        Ejemplares = new classEjemplares();
        methodsSQL.setEjemplares(Ejemplares);
        mostrar();
        cargarComboBoxAuthor();
        cargarComboBoxEditorial();
        cargarComboBoxEjemplar();
        cargarComboBoxCat();
        id.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtISBN = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtCant = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtPublicacion = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtNumPag = new javax.swing.JTextField();
        comboCat = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        comboEditorial = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        comboAutor = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        comboEjemplar = new javax.swing.JComboBox<>();
        btnGuardar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbEjemplares = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(730, 560));
        setPreferredSize(new java.awt.Dimension(730, 560));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Nombre");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, 50, 10));

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });
        add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 60, 150, -1));

        jLabel2.setText("ISBN");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 50, 10));
        add(txtISBN, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 90, 150, -1));

        jLabel3.setText("Cantidad de ejemplares");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, -1, -1));
        add(txtCant, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 120, 150, -1));

        jLabel4.setText("Publicacion");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, -1, -1));
        add(txtPublicacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 150, 150, -1));

        jLabel5.setText("Numero de Paginas");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, -1, -1));
        add(txtNumPag, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 180, 150, -1));

        comboCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCatActionPerformed(evt);
            }
        });
        add(comboCat, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 210, 150, -1));

        jLabel6.setText("Seleccione Categoria");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, -1, -1));

        jLabel7.setText("Seleccione Editorial");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, -1, -1));

        add(comboEditorial, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 240, 150, -1));

        jLabel8.setText("Seleccione Autor");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, -1, -1));

        add(comboAutor, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 270, 150, -1));

        jLabel9.setText("Seleccione tipo de ejemplar");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, -1, -1));

        add(comboEjemplar, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 300, 150, -1));

        btnGuardar.setBackground(new java.awt.Color(0, 115, 165));
        btnGuardar.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 10)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardar.setText("Guardar");
        btnGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 60, 130, 40));

        btnModificar.setBackground(new java.awt.Color(0, 115, 165));
        btnModificar.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 10)); // NOI18N
        btnModificar.setForeground(new java.awt.Color(255, 255, 255));
        btnModificar.setText("Modificar");
        btnModificar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        add(btnModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 110, 130, 40));

        btnEliminar.setBackground(new java.awt.Color(0, 115, 165));
        btnEliminar.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 10)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setText("Eliminar");
        btnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 160, 130, 40));

        tbEjemplares.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbEjemplares.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbEjemplaresMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbEjemplares);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 360, 610, 180));

        jLabel10.setBackground(new java.awt.Color(153, 153, 153));
        jLabel10.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 51, 51));
        jLabel10.setText("Gestion de ejemplares");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(38, 22, -1, -1));
        add(id, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 210, 60, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void comboCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboCatActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (!camposVacios()) {
            if (!exists(txtISBN.getText())) {
                asignar();
                if (Ejemplares.insert()) {
                    mostrarMensaje(2);
                } else {
                    mostrarMensaje(3);
                }
            } else {
                mostrarMensaje(1);
            }
        } else {
            mostrarMensaje(0);
        }

        limpiarCampos();
        mostrar();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        if (!camposVacios()) {
            update();
        } else {
            mostrarMensaje(3);
        }
        limpiarCampos();
        mostrar();
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if (!campoVacio(id.getText())) {
            Ejemplares.setId(Integer.parseInt(id.getText()));
            if (existsE(Ejemplares.getId())) {
                if (Ejemplares.delete()) {
                    mostrarMensaje(2);
                } else {
                    mostrarMensaje(3);
                }
            } else {
                mostrarMensaje(4);
            }
        } else {
            mostrarMensaje(0);
        }

        mostrar();
        limpiarCampos();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void tbEjemplaresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbEjemplaresMouseClicked
        try {
            int i = tbEjemplares.getSelectedRow();
            query = "SELECT isbn, name, quantity, publish_at, total_pages, editorial_id , copy_category, copy_author, copy_type FROM copies WHERE id = ?";
            ResultSet rs = methodsSQL.getExecute(query, tbEjemplares.getValueAt(i, 0));
            if (rs.next()) {
                Ejemplares.setTxtISBN(rs.getString(1));
                Ejemplares.setTxtName(rs.getString(2));
                Ejemplares.setTxtCant(rs.getInt(3));
                Ejemplares.setTxtPublicacion(rs.getString(4));
                Ejemplares.setTxtNumPag(rs.getInt(5));
                Ejemplares.setComboEditorial(rs.getInt(6));
                Ejemplares.setComboCat(rs.getInt(7));
                Ejemplares.setComboAutor(rs.getInt(8));
                Ejemplares.setComboEjemplar(rs.getInt(9));
            }
            id.setText(tbEjemplares.getValueAt(i, 0).toString());
            txtISBN.setText(Ejemplares.getTxtISBN());
            txtName.setText(Ejemplares.getTxtName());
            txtCant.setText(Integer.toString(Ejemplares.getTxtCant()));
            txtPublicacion.setText(Ejemplares.getTxtPublicacion());
            txtNumPag.setText(Integer.toString(Ejemplares.getTxtNumPag()));
            comboEditorial.setSelectedIndex(Ejemplares.getComboEditorial() - 1);
            comboCat.setSelectedIndex(Ejemplares.getComboCat() - 1);
            comboAutor.setSelectedIndex(Ejemplares.getComboAutor() - 1);
            comboEjemplar.setSelectedIndex(Ejemplares.getComboEjemplar() - 1);
        } catch (SQLException ex) {
            Logger.getLogger(pEjemplares.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_tbEjemplaresMouseClicked

    void setColor(JPanel panel){
        panel.setBackground(new Color(0, 107, 165));
    }
    void resetColor(JPanel panel){
        panel.setBackground(new Color(0, 115, 165));
    }
    

    //Verificar campos vacios
    public boolean camposVacios() {
        if (campoVacio(txtCant.getText()) || comboAutor.getSelectedIndex() == -1
                || campoVacio(txtISBN.getText()) || comboCat.getSelectedIndex() == -1
                || campoVacio(txtName.getText()) || campoVacio(txtNumPag.getText()) || campoVacio(txtPublicacion.getText())
                || comboEditorial.getSelectedIndex() == -1 || comboEjemplar.getSelectedIndex() == -1) {
            return true;
        } else {
            return false;
        }
    }

    //Retorna true si el campo está vacio
    public boolean campoVacio(String text) {
        text = text.replaceAll(" ", "");
        if (text.isEmpty() || text.length() == 0) {
            return true;
        } else {
            return false;
        }
    }

    //Asignar valores
    public void asignar() {
        Ejemplares.setTxtName(txtName.getText());
        Ejemplares.setTxtISBN(txtISBN.getText());
        Ejemplares.setTxtCant(Integer.parseInt(txtCant.getText()));
        Ejemplares.setTxtNumPag(Integer.parseInt(txtNumPag.getText()));
        Ejemplares.setTxtPublicacion(txtPublicacion.getText());
        Ejemplares.setComboAutor(methodsSQL.getExecuteInt("SELECT id FROM copy_authors WHERE full_name = ?", comboAutor.getSelectedItem().toString()));
        Ejemplares.setComboCat(methodsSQL.getExecuteInt("SELECT id FROM copy_categories WHERE category = ?", comboCat.getSelectedItem().toString()));
        Ejemplares.setComboEditorial(methodsSQL.getExecuteInt("SELECT id FROM editorials WHERE editorial = ?", comboEditorial.getSelectedItem().toString()));
        Ejemplares.setComboEjemplar(methodsSQL.getExecuteInt("SELECT id FROM copy_type WHERE type = ?", comboEjemplar.getSelectedItem().toString()));
    }

    //Modificar valores
    public void update() {
        Ejemplares.setId(Integer.parseInt(id.getText()));
        if (existsE(Ejemplares.getId())) {
            asignar();
            if (Ejemplares.update()) {
                mostrarMensaje(2);
            } else {
                mostrarMensaje(3);
            }
        } else {
            mostrarMensaje(4);
        }
    }

    //Verificar si los datos existen en la bd mediante el isbn
    public boolean exists(String textISBN) {
        return methodsSQL.exists("SELECT * FROM copies WHERE isbn = ?", textISBN);
    }

    //Verificar si los datos existen en la bd por el id para eliminar
    public boolean existsE(Integer id) {
        return methodsSQL.exists("SELECT * FROM copies WHERE id = ?", id);
    }

    //Mensajes
    public void mostrarMensaje(int value) {
        switch (value) {
            case 0:
                JOptionPane.showMessageDialog(this, "Campos vacios", "Advertencia", JOptionPane.WARNING_MESSAGE);
                break;
            case 1:
                JOptionPane.showMessageDialog(this, "Ese id ya exciste", "Advertencia", JOptionPane.WARNING_MESSAGE);
                break;
            case 2:
                JOptionPane.showMessageDialog(this, "Exito al ejecutar", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                break;
            case 3:
                JOptionPane.showMessageDialog(this, "Error al ejecutar", "Mensaje", JOptionPane.ERROR_MESSAGE);
                break;
            case 4:
                JOptionPane.showMessageDialog(this, "Ese id no existe", "Advertencia", JOptionPane.WARNING_MESSAGE);
                break;
        }
    }

    public void mostrar() {
        query = "SELECT c.id, c.isbn, c.name, c.quantity, c.publish_at, c.total_pages, e.editorial, cat.category, a.full_name, t.type FROM  copies c, editorials e, copy_categories cat, copy_authors a, copy_type t WHERE c.editorial_id = e.id AND c.copy_category = cat.id AND c.copy_author = a.id AND c.copy_type = t.id";
        tbEjemplares.setModel(methodsSQL.getTableModel(query, "ID", "ISBN", "Titulo", "Cantidad", "FechaPub", "Paginas", "Editorial", "Categoria", "Author", "Tipo de Ejemplar"));
    }

    public void cargarComboBoxAuthor() {
        try {
            ResultSet rs = methodsSQL.getExecute("SELECT full_name FROM copy_authors ");
            while (rs.next()) {
                comboAutor.addItem(rs.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(pEjemplares.class.getName()).log(Level.SEVERE, null, ex);
            

        }
        comboAutor.setSelectedIndex(-1);
    }

    public void cargarComboBoxEditorial() {
        try {
            ResultSet rs = methodsSQL.getExecute("SELECT editorial FROM editorials ");
            while (rs.next()) {
                comboEditorial.addItem(rs.getString(1));

            }
        } catch (SQLException ex) {
            Logger.getLogger(pEjemplares.class.getName()).log(Level.SEVERE, null, ex);
        }
        comboEditorial.setSelectedIndex(-1);
    }
    
    public void cargarComboBoxEjemplar() {
        try {
            ResultSet rs = methodsSQL.getExecute("SELECT type FROM copy_type ");
            while (rs.next()) {
                comboEjemplar.addItem(rs.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(pEjemplares.class.getName()).log(Level.SEVERE, null, ex);
            

        }
        comboEjemplar.setSelectedIndex(-1);
    }

    public void cargarComboBoxCat() {
        try {
            ResultSet rs = methodsSQL.getExecute("SELECT category FROM copy_categories ");
            while (rs.next()) {
                comboCat.addItem(rs.getString(1));

            }
        } catch (SQLException ex) {
            Logger.getLogger(pEjemplares.class.getName()).log(Level.SEVERE, null, ex);
        }
        comboCat.setSelectedIndex(-1);
    }

    public void limpiarCampos() {
        txtName.setText("");
        txtISBN.setText("");
        txtCant.setText("");
        txtNumPag.setText("");
        txtPublicacion.setText("");
        comboAutor.setSelectedIndex(-1);
        comboCat.setSelectedIndex(-1);
        comboEditorial.setSelectedIndex(-1);
        comboEjemplar.setSelectedIndex(-1);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JComboBox<String> comboAutor;
    private javax.swing.JComboBox<String> comboCat;
    private javax.swing.JComboBox<String> comboEditorial;
    private javax.swing.JComboBox<String> comboEjemplar;
    private javax.swing.JTextField id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbEjemplares;
    private javax.swing.JTextField txtCant;
    private javax.swing.JTextField txtISBN;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtNumPag;
    private javax.swing.JTextField txtPublicacion;
    // End of variables declaration//GEN-END:variables
}
