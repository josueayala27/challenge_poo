/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package paneles;

import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import main.classCategoriaTipos;
import main.classTipos;
import main.methodsSQL;

/**
 *
 * @author cesar
 */
public class pCategoriaTipos extends javax.swing.JPanel {
    private final classCategoriaTipos Categoria;
    private final classTipos Tipo;
    private String query;
    /**
     * Creates new form pCategoriaTipos
     */
    public pCategoriaTipos() {
        initComponents();
        Categoria = new classCategoriaTipos();
        Tipo = new classTipos();
        methodsSQL.setCategoriaTipos(Categoria);
        methodsSQL.setTipos(Tipo);
        mostrarCategoria();
        mostrarTipo();
        cargarComboBoxSection();
        idCat.setVisible(false);
        idTipo.setVisible(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtTipos = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbCategoria = new javax.swing.JTable();
        txtCategoria = new javax.swing.JTextField();
        cmbSection = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbTipo = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        btnGuardar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnModificar1 = new javax.swing.JButton();
        btnGuardar1 = new javax.swing.JButton();
        btnEliminar1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        idTipo = new javax.swing.JTextField();
        idCat = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        add(txtTipos, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 140, 210, -1));

        jLabel1.setBackground(new java.awt.Color(153, 153, 153));
        jLabel1.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Localidad de Categoria");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, -1, -1));

        jLabel5.setBackground(new java.awt.Color(153, 153, 153));
        jLabel5.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(153, 153, 153));
        jLabel5.setText("(ejem: terror, romance, misterio...)");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, -1, -1));

        jLabel2.setBackground(new java.awt.Color(153, 153, 153));
        jLabel2.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("Tipo de Ejemplares");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 90, -1, 20));

        jLabel6.setBackground(new java.awt.Color(153, 153, 153));
        jLabel6.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(153, 153, 153));
        jLabel6.setText("(ejem: Tesis, Obra, Libro...)");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 110, -1, 20));

        tbCategoria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbCategoria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbCategoriaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbCategoria);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 250, 340, 230));
        add(txtCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 210, -1));

        add(cmbSection, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, 210, -1));

        jLabel3.setBackground(new java.awt.Color(153, 153, 153));
        jLabel3.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 51));
        jLabel3.setText("Categoria de Ejemplares");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, -1, -1));

        tbTipo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbTipo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbTipoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbTipo);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 250, 310, 230));

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 80, 10, 430));

        btnGuardar.setBackground(new java.awt.Color(0, 115, 165));
        btnGuardar.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 10)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardar.setText("Guardar");
        btnGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 90, 90, 30));

        btnModificar.setBackground(new java.awt.Color(0, 115, 165));
        btnModificar.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 10)); // NOI18N
        btnModificar.setForeground(new java.awt.Color(255, 255, 255));
        btnModificar.setText("Modificar");
        btnModificar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        add(btnModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 130, 90, 30));

        btnEliminar.setBackground(new java.awt.Color(0, 115, 165));
        btnEliminar.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 10)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setText("Eliminar");
        btnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 170, 90, 30));

        btnModificar1.setBackground(new java.awt.Color(0, 115, 165));
        btnModificar1.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 10)); // NOI18N
        btnModificar1.setForeground(new java.awt.Color(255, 255, 255));
        btnModificar1.setText("Modificar");
        btnModificar1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnModificar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificar1ActionPerformed(evt);
            }
        });
        add(btnModificar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 130, 90, 30));

        btnGuardar1.setBackground(new java.awt.Color(0, 115, 165));
        btnGuardar1.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 10)); // NOI18N
        btnGuardar1.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardar1.setText("Guardar");
        btnGuardar1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnGuardar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardar1ActionPerformed(evt);
            }
        });
        add(btnGuardar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 90, 90, 30));

        btnEliminar1.setBackground(new java.awt.Color(0, 115, 165));
        btnEliminar1.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 10)); // NOI18N
        btnEliminar1.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar1.setText("Eliminar");
        btnEliminar1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnEliminar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminar1ActionPerformed(evt);
            }
        });
        add(btnEliminar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 170, 90, 30));

        jLabel4.setBackground(new java.awt.Color(153, 153, 153));
        jLabel4.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setText("Gestion de categorias y tipos");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(38, 22, -1, -1));
        add(idTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 210, 60, -1));
        add(idCat, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 210, 60, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
       if (!camposVaciosCat()) {
            if (!existsCat(txtCategoria.getText())) {
                asignarCat();
                if (Categoria.insert()) {
                    mostrarMensaje(2);
                } else {
                    mostrarMensaje(3);
                }
            } else {
                mostrarMensaje(1);
            }
        } else {
            mostrarMensaje(0);
        }

        limpiarCampos();
        mostrarCategoria();     
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        if (!camposVaciosCat()) {
            updateCat();
        } else {
            mostrarMensaje(3);
        }
        limpiarCampos();
        mostrarCategoria();
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if (!campoVacio(idCat.getText())) {
            Categoria.setIdCategoria(Integer.parseInt(idCat.getText()));
            if (existsCatID(Categoria.getIdCategoria())) {
                if (Categoria.delete()) {
                    mostrarMensaje(2);
                } else {
                    mostrarMensaje(3);
                }
            } else {
                mostrarMensaje(4);
            }
        } else {
            mostrarMensaje(0);
        }

        limpiarCampos();
        mostrarCategoria();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnModificar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificar1ActionPerformed
        if (!camposVaciosTipo()) {
            updateTipo();
        } else {
            mostrarMensaje(3);
        }
        limpiarCampos();
        mostrarTipo();
    }//GEN-LAST:event_btnModificar1ActionPerformed

    private void btnGuardar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardar1ActionPerformed
        if (!camposVaciosTipo()) {
            if (!existTipo(txtTipos.getText())) {
                asignarTipo();
                if (Tipo.insert()) {
                    mostrarMensaje(2);
                } else {
                    mostrarMensaje(3);
                }
            } else {
                mostrarMensaje(1);
            }
        } else {
            mostrarMensaje(0);
        }

        limpiarCampos();
        mostrarTipo();  
    }//GEN-LAST:event_btnGuardar1ActionPerformed

    private void btnEliminar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminar1ActionPerformed
        if (!campoVacio(idTipo.getText())) {
            Tipo.setIdTipo(Integer.parseInt(idTipo.getText()));
            if (existTipoID(Tipo.getIdTipo())) {
                if (Tipo.delete()) {
                    mostrarMensaje(2);
                } else {
                    mostrarMensaje(3);
                }
            } else {
                mostrarMensaje(4);
            }
        } else {
            mostrarMensaje(0);
        }

        limpiarCampos();
        mostrarTipo();
    }//GEN-LAST:event_btnEliminar1ActionPerformed

    private void tbCategoriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbCategoriaMouseClicked
       try {
            int i = tbCategoria.getSelectedRow();
            query = "SELECT category, location_section_id from copy_categories WHERE id = ?";
            ResultSet rs = methodsSQL.getExecute(query, tbCategoria.getValueAt(i, 0));
            if (rs.next()) {

                Categoria.setTextCategoria(rs.getString(1));
                Categoria.setCmbLocalidad(rs.getInt(2));
            }
            idCat.setText(tbCategoria.getValueAt(i, 0).toString());
            txtCategoria.setText(Categoria.getTextCategoria());
            cmbSection.setSelectedIndex(Categoria.getCmbLocalidad() - 1);
            
        } catch (SQLException ex) {
            Logger.getLogger(pCategoriaTipos.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_tbCategoriaMouseClicked

    private void tbTipoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbTipoMouseClicked
        try {
            int i = tbTipo.getSelectedRow();
            query = "SELECT type from copy_type WHERE id = ?";
            ResultSet rs = methodsSQL.getExecute(query, tbTipo.getValueAt(i, 0));
            if (rs.next()) {

                Tipo.setTxtTipo(rs.getString(1));
            }
            idTipo.setText(tbTipo.getValueAt(i, 0).toString());
            txtTipos.setText(Tipo.getTxtTipo());
            
        } catch (SQLException ex) {
            Logger.getLogger(pCategoriaTipos.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_tbTipoMouseClicked

    //Modificar valores
    public void updateCat() {
        Categoria.setIdCategoria(Integer.parseInt(idCat.getText()));
        if (existsCatID(Categoria.getIdCategoria())) {
            asignarCat();
            if (Categoria.update()) {
                mostrarMensaje(2);
            } else {
                mostrarMensaje(3);
            }
        } else {
            mostrarMensaje(4);
        }
    }
    
    public void updateTipo() {
        Tipo.setIdTipo(Integer.parseInt(idTipo.getText()));
        if (existTipoID(Tipo.getIdTipo())) {
            asignarTipo();
            if (Tipo.update()) {
                mostrarMensaje(2);
            } else {
                mostrarMensaje(3);
            }
        } else {
            mostrarMensaje(4);
        }
    }
    
    public boolean existsCat(String txtCategoria) {
        return methodsSQL.exists("SELECT * FROM copy_categories WHERE category = ?", txtCategoria);
    }
    
    public boolean existsCatID(Integer idCat) {
        return methodsSQL.exists("SELECT * FROM copy_categories WHERE id = ?", idCat);
    }
    
    public boolean existTipo(String txtTipos) {
        return methodsSQL.exists("SELECT * FROM copy_type WHERE type = ?", txtTipos);
    }
    
    public boolean existTipoID(Integer idTipo) {
        return methodsSQL.exists("SELECT * FROM copy_type WHERE id = ?", idTipo);
    }
    
    public void asignarCat() {
        Categoria.setTextCategoria(txtCategoria.getText());
        Categoria.setCmbLocalidad(methodsSQL.getExecuteInt("SELECT id FROM location_sections WHERE section = ?", cmbSection.getSelectedItem().toString()));
    }
    
    public void asignarTipo() {
        Tipo.setTxtTipo(txtTipos.getText());
    }
    
    //Retorna true si el campo está vacio
    public boolean campoVacio(String text) {
        text = text.replaceAll(" ", "");
        if (text.isEmpty() || text.length() == 0) {
            return true;
        } else {
            return false;
        }
    }
    
    public boolean camposVaciosCat() {
        if (campoVacio(txtCategoria.getText()) || cmbSection.getSelectedIndex() == -1) {
            return true;
        } else {
            return false;
        }
    }
    
    public boolean camposVaciosTipo() {
        if (campoVacio(txtTipos.getText())) {
            return true;
        } else {
            return false;
        }
    }
    
    public void mostrarCategoria() {
        query = "select c.id, c.category, s.section from copy_categories c, location_sections s WHERE c.location_section_id = s.id";
        tbCategoria.setModel(methodsSQL.getTableModel(query, "ID", "Categoria", "Seccion"));
    }
    
    public void mostrarTipo() {
        query = "SELECT t.id, t.type FROM copy_type t";
        tbTipo.setModel(methodsSQL.getTableModel(query, "ID", "Tipo de ejemplares"));
    }
    
    public void cargarComboBoxSection() {
        try {
            ResultSet rs = methodsSQL.getExecute("SELECT section FROM location_sections");
            while (rs.next()) {
                cmbSection.addItem(rs.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(pEjemplares.class.getName()).log(Level.SEVERE, null, ex);
            

        }
        cmbSection.setSelectedIndex(-1);
    }
    
    public void limpiarCampos() {
        txtCategoria.setText("");
        cmbSection.setSelectedIndex(-1);
        idCat.setText("");
        
        idTipo.setText("");
        txtTipos.setText("");
    }
    
    //Mensajes
    public void mostrarMensaje(int value) {
        switch (value) {
            case 0:
                JOptionPane.showMessageDialog(this, "Campos vacios", "Advertencia", JOptionPane.WARNING_MESSAGE);
                break;
            case 1:
                JOptionPane.showMessageDialog(this, "Ese id ya exciste", "Advertencia", JOptionPane.WARNING_MESSAGE);
                break;
            case 2:
                JOptionPane.showMessageDialog(this, "Exito al ejecutar", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                break;
            case 3:
                JOptionPane.showMessageDialog(this, "Error al ejecutar", "Mensaje", JOptionPane.ERROR_MESSAGE);
                break;
            case 4:
                JOptionPane.showMessageDialog(this, "Ese id no existe", "Advertencia", JOptionPane.WARNING_MESSAGE);
                break;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnEliminar1;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnGuardar1;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnModificar1;
    private javax.swing.JComboBox<String> cmbSection;
    private javax.swing.JTextField idCat;
    private javax.swing.JTextField idTipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tbCategoria;
    private javax.swing.JTable tbTipo;
    private javax.swing.JTextField txtCategoria;
    private javax.swing.JTextField txtTipos;
    // End of variables declaration//GEN-END:variables
}
